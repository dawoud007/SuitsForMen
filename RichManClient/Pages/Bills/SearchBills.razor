@page "/SearchBills"
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components
@inject HttpClient Http

<PageTitle>ابحث باسم المشتري</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <h3 class="text-center mb-4">ابحث باسم المشتري</h3>
            <form>
                <div class="form-group">
                    <label for="buyerNameInput" class="form-label">Buyer Name</label>
                    <input type="text" class="form-control" id="buyerNameInput" @bind="searchedBuyerName" />
                </div>
                <div class="text-center">
                    <button type="button" class="btn btn-primary btn-search" @onclick="Search">بحث</button>
                </div>
            </form>
        </div>
    </div>

    <div class="row mt-5 justify-content-center">
        <div class="col-md-8">
            @if (isError)
            {
                <div class="error-message">
                    @errorMessage
                </div>
            }
            else if (bill == null)
            {
                <p class="text-center"><em>لا يوجد فاتورة مماثلة</em></p>
            }
            else
            {
                <div class="card">
                    <div class="card-header">
                        Bill Information
                    </div>
                    <div class="card-body">
                        <p><strong>اسم المشتري:</strong> @bill.BuyerName</p>
                        <p><strong>اسم المحل:</strong> @bill.SellerName</p>
                        <p><strong>تفاصيل:</strong> @bill.Description</p>
                        @if (bill.WarningToNumberOfPieces == $"warning only {bill.limit} pieces")
                        {
                            <p><strong>تحذير عدد القطع:</strong> @bill.WarningToNumberOfPieces</p>
                        }
                        <!-- Display suits if available -->
                        @if (bill.Suits != null && bill.Suits.Any())
                        {
                            <h5>Suits:</h5>
                            <ul>
                                @foreach (var suit in bill.Suits)
                                {
                                    <li>@suit.Name - @suit.Color - @suit.Size - @suit.type</li>
                                }
                            </ul>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    /* Custom CSS for styling */
    .btn-search {
        margin-top: 20px;
        background-color: red;
        border-color: black;
    }

    /* Adjust the form inputs' styles */
    .form-control {
        border-color: black;
        border-width: 2px;
    }

    /* Set a custom width for the form */
    .col-md-6 {
        max-width: 400px;
    }

    /* Add some space between the card and the form */
    .mt-5 {
        margin-top: 30px;
    }
</style>

@code {
    private string searchedBuyerName;
    private BillDto bill;
    private bool isRegistered = false; // Flag to show success message
    private bool isError = false; // Flag to show error message
    private string errorMessage = "there is no bills with this buyer name"; // Error message text
    private async Task Search()
    {
        try
        {
            // Make the GET request with the searchedBuyerName as a query parameter
            var response = await Http.GetFromJsonAsync<BillDto>("http://localhost:5000/Bill/GetBillWithBuyerName?searchedBuyertName=" + searchedBuyerName);

            if (response != null && response.SellerName != null)
            {
                // Store the retrieved bill in the 'bill' variable
                bill = response;

                // Reset error flags if the request is successful
                isError = false;
                errorMessage = "there is no bills with this buyer name";
            }
            else
            {
                // If no bill is found, reset the 'bill' variable
                bill = null;

                // Set error flags and update the error message
                isError = true;
                errorMessage = "No matching bill found with the provided buyer name.";
            }
        }
        catch (Exception ex)
        {
            // Handle any exceptions that occur during the API request
            // Set error flags and update the error message
            isError = true;
            errorMessage = "حدث خطا يرجى ادخال قيمة صحيحة";
        }
    }
}
