@page "/addbill"
@using ElectronicsShop_service.Dtos
@inject HttpClient Http
@inject NavigationManager NavigationManager

<style>
    /* Add your custom styles here */
    .form-group label {
        font-weight: bold;
    }

    .form-control {
        border-color: blue;
    }

    .btn-primary {
        background-color: #11d;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-top: 20px;
        font-weight: bold;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0a0a8b;
            color: white;
        }

    .container {
        width: 50%;
        background-color: #f5f5f5;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    }

    .form-wrapper {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        width: 100%;
    }

    .options {
        min-width: 400px;
        width: 70%;
        margin: auto;
        background-color: #ffffffc7;
        padding: 2rem;
        border-radius: 4rem;
        color: #11d;
        box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
        margin-top: 1rem;
    }

        .options .form-control {
            background-color: #fff;
        }

    .clothes {
        width: 300px;
        margin: auto;
        color: #11d;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-container {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    h3,
    h4 {
        font-size: 2rem;
        font-weight: 700;
        color: #000;
    }
</style>

<div class="container form-container">

    <h3>اضف فاتورة</h3>

    @if (isBillAdded)
    {
        <div class="alert alert-success mt-3">
            تم اضافة الفاتورة!
        </div>
    }

    @if (errorMessage != null)
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }

    <form class="form-wrapper">
        <div class="options">

            
            <div class="form-group">
                <label>اسم المشتري</label>
                <input type="text" class="form-control" @bind="@newBill.BuyerName" />
            </div>
            <div class="form-group">
                <label>السعر الكلي</label>
                <input type="number" class="form-control" @bind="@newBill.SellingPricee" />
            </div>
            <div class="form-group">
                <label>تفاصيل اضافية</label>
                <input type="text" class="form-control" @bind="@newBill.Description" />
            </div>
            <div class="form-group">
                <label>اسم العامل</label>
                <select class="form-control" @onclick="FetchWorkers" @bind="@newBill.WorkerName">
                    <option value="">اختر العامل</option>
                    @foreach (var worker in Workers)
                    {
                        <option value="@worker.WorkerName">@worker.WorkerName</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="addAccountType">ادخال الى:</label>
                <select class="form-control" id="addAccountType" @bind="@newBill.AccountType">
                    <option value="Box">الدرج</option>
                    <option value="Visa">الفيزا</option>
                </select>
            </div>

        </div>

        <div class="clothes options">
            <h4>اضافة قطعة:</h4>
            @if (newBill.Suits != null && newBill.Suits.Any())
            {
                @foreach (var cloth in newBill.Suits)
                {
                    <div class="form-group">
                        <label>اسم القطعة</label>
                        <input type="text" class="form-control" @bind="@cloth.Name" />
                    </div>
                    <div class="form-group">
                        <label>الماركة</label>
                        <input type="text" class="form-control" @bind="@cloth.type" />
                    </div>
                    <div class="form-group">
                        <label>المقاس</label>
                        <input type="number" class="form-control" @bind="@cloth.Size" />
                    </div>
                    <div class="form-group">
                        <label>اللون</label>
                        <input type="text" class="form-control" @bind="@cloth.Color" />
                    </div>
                    <div class="form-group">
                        <label>عدد القطع المشترية</label>
                        <input type="number" class="form-control" @bind="@cloth.NumOfPieces" />
                    </div>

                    <hr />
                }
            }

        </div>

        <div class="d-flex justify-content-between">
            <button type="button" class="btn btn-warning" @onclick="AddNewBill">اضف فاتورة</button>
            <button type="button" class="btn btn-danger" @onclick="AddNewCloth">اضافة قطعة</button>
        </div>
    </form>
</div>



@code {
    private BillDto newBill = new BillDto();
    private bool isBillAdded = false;
    private string? errorMessage;
    private List<Worker> Workers { get; set; } = new List<Worker>();

    private async Task FetchWorkers()
    {
        try
        {
            Workers = await Http.GetFromJsonAsync<List<Worker>>(sharedStateService.Api_Uri + "Shop/GetWorkersToShop");
        }
        catch (Exception ex)
        {
            // Handle API call errors
        }
    }


 

    // Method to add a new Cloth object to the bill
    private void AddNewCloth()
    {
        if (newBill.Suits == null)
        {
            newBill.Suits = new List<Cloth>();
        }
        newBill.Suits.Add(new Cloth());
    }

    private async Task AddNewBill()
    {
        // Here, you can make the API call to add the bill with the clothes
        // You can use the 'newBill' object to send the data to the API

        try
        {
            Console.WriteLine(newBill.WorkerName);
            Console.WriteLine(newBill.BuyerName);
            Console.WriteLine(newBill.SellingPricee);
            Console.WriteLine(newBill.Description);
           
            var response = await Http.PostAsJsonAsync(sharedStateService.Api_Uri + "Bill/Post", newBill);

            if (response.IsSuccessStatusCode)
            {
                isBillAdded = true;
                // Optionally, you can reset the newBill object to clear the form after successful addition.
                newBill = new BillDto();
                errorMessage = null; // Reset any previous error message
            }
            else
            {
                // Handle the error scenario here (display error message, etc.)
                isBillAdded = false;
                errorMessage = "Error occurred while adding the bill."; // You can customize the error message.
            }
        }
        catch (Exception ex)
        {
            // Handle the exception
            // For example, you can display a toast message with the error.
            isBillAdded = false;
            errorMessage = ex.Message; // Store the actual exception message for display.
        }
    }
}
