@page "/userlist"
@using ElectronicsShop_service.Models
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject IAuthenticationService AuthenticationService

<style>
    /* Add your custom styles here */
    .table {
        width: 100%;
        border-collapse: collapse;
      }
      h3 {
        text-align: center;
        color: #11a;
        margin-bottom: 20px;
      }
      .table th,
      .table td {
        padding: 8px;
        border: 1px solid #ccc;
        text-align: left;
      }

      .table th {
        background: linear-gradient(to right, white, white);
        color: #11a;
        font-weight: bold;
      }

      .table tr:nth-child(even) {
        background-color: #f2f2f2;
      }

      .delete-button {
        background-color: #a11;
        color: white;
        border: none;
        cursor: pointer;
        padding: 5px 12px;
        border-radius: 8px;
      }
      .delete-button:hover {
        background-color: red;
      }
</style>

<h3>قائمة المحلات</h3>

<table class="table">
    <thead>
        <tr>

            <th>الاسم</th>
            <th>المنصب</th>
            <th>اسم المحل</th>
          
        </tr>
    </thead>
    <tbody>
        @if (users != null && users.Count > 0 )
        {
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Role</td>
                    <td>@user.WhatToSee</td>
                
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4">لا يوجد محلات</td>
            </tr>
        }
    </tbody>
</table>

@code {

    private List<User> users=new List<User>();
    string Api_Uri = "http://localhost:5000/";
    protected override async Task OnInitializedAsync()
    {

        var token = await AuthService.GetAccessTokenAsync();

        // Set the authorization header for the HttpClient
        if (!string.IsNullOrEmpty(token))
        {
            Http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        }

        if (!string.IsNullOrEmpty(token))
        {
            await LoadUsers();
        }
    }

    private async Task LoadUsers()
    {
        users = await Http.GetFromJsonAsync<List<User>>(Api_Uri + "Auth/GetAllUsers")!;
    }

    private async Task DeleteUser(User user)
    {
        Console.WriteLine(user.Id);
        var result = await Http.DeleteAsync(Api_Uri+$"Auth/DeleteUser/{user.UserName}");
        if (result.IsSuccessStatusCode)
        {
            users.Remove(user);
        }
        else
        {
            // Handle error here
        }
    }
}
